name: 'build-docker'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: itpcrswecswecgeneral01
  ACR_LOGIN_SERVER: itpcrswecswecgeneral01.azurecr.io
  APP_NAME: it-p-app-swec-swec-wp-01
  RESOURCE_GROUP: it-p-rg-swec-swec-wp-01
  IMAGE_NAME: wp1:latest

jobs:
  build:
    environment: prd
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set environment variables for Azure authentication
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Build Docker image
        run: |
          az acr login --name $ACR_NAME
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $ACR_LOGIN_SERVER/$IMAGE_NAME
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME

      - name: Configure Web App to use the ACR image
        run: |
          az webapp config container set \
            --name $APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --docker-custom-image-name $ACR_LOGIN_SERVER/$IMAGE_NAME \
            --docker-registry-server-url https://$ACR_LOGIN_SERVER